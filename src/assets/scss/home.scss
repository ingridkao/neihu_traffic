@import '@/assets/scss/variables.scss';
@import '@/assets/scss/main.scss';

%articleLayout {
	position: relative;
	color: $textSubColor;
	background-color: $whiteColor;
	z-index: 1;
}

main{
	position: relative;
	*{
		box-sizing: border-box;
	}
}

// main_scrollama - start
.colArticle{
	max-width: 62rem;
}
#main_scrollama{
	position: relative;
	overflow: hidden;
	z-index: 1;
	&.langEn{
		h6{
			font-size: 1.1rem;
			margin-bottom: 1.5rem;
		}
		p{
			font-size: 0.9rem;
			line-height: 1.6;
		}
		.imgContainer{
			width: calc(100% - $mapEnAsideWidth);
			@media screen and (max-width:1025px){
				width: 100%;
			}
		}
		.step.rowBox .articalBox{
			width: $mapEnAsideWidth;
		}
		.svgHeader ul{
			width: calc($mapEnAsideWidth - 12rem);
		}	
	}
	.imgContainer{
		position: absolute;
		width: calc(100% - $mapAsideWidth);
		height: 100vh;
		top: 0;
		right: 0;
		z-index: 2;
		@media screen and (max-width:1025px){
			width: 100vw;
			pointer-events: none;
		}
		&.fixed{
			position: fixed;
		}
	}
	.step{
		@extend %articleLayout;
		//Avoid using viewport height (vh) in your CSS because scrolling up and down constantly triggers vh to change, which will also trigger a window resize.
		h6, p{
			position: relative;
			width: 100%;
			text-align: left;
			
		}
		h6:not(:last-child),
		p:not(:last-child){
			margin-bottom: 1rem;
			@media screen and (max-width:1025px){
				margin-bottom: 0.75rem;
			}
		}
		&#chapter4{
			padding: 7.5rem 2rem;
			@media screen and (max-width:1025px){
				padding: 2.5rem 1rem;
			}
		}
		&.rowBox{
			@extend %horizontalCenter;
			height: 57.5rem;
			@media screen and (max-width:1025px){
				display: block;
				background-color: transparent;
				z-index: 2;
			}
			@media screen and (min-width:1801px){ // For desktop
				height: 65rem;
			}
			.articalBox{
				@extend %contentPadding;
				@extend %verticalCenter;
				width: $mapAsideWidth;
				padding-top: 4rem;
				padding-bottom: 4rem;
				@media screen and (max-width:1025px){
					position: absolute;
					padding-top: 1rem;
					padding-bottom: 1rem;
					width: 100% !important;
					top: 0;
					z-index: 10;
					background-color: rgba($whiteColor, 0.9);
				}
				>div{
					position: relative;
				}
			}
			.imgBox{
				width: calc(100% - $mapAsideWidth);
				.bgBlock{
					height: 100vh;
				}
				@media screen and (max-width:1025px){
					position: absolute;
					width: 100vw !important;
					z-index: 0;
				}
			}
		}
		&.mapContainer{
			@extend %horizontalCenter;
			@media screen and (max-width:1025px){
				display: block;
			}
			aside{
				flex-basis: $mapAsideWidth;
				padding: 1rem;
				height: calc(100vh - 2rem);
				@media screen and (max-width:1025px){
					height: auto;
				}
				.chartContainer{
					width: 100%;
					height: 19rem;
				}
				.townBox{
					width: 100%;
					min-height: 13rem;
					margin-bottom: 1rem;
					@media screen and (max-width:1025px){
						min-height: auto;
						margin-bottom: 2rem;
					}
				}
			}
			main{
				flex: 1 1 calc(100% - #{$mapAsideWidth});
				padding: 0;
			}
		}
		&.carouselContainer{
			@extend %contentPadding;
			z-index: 2;
			.carouselHeader{
				position: relative;
				padding-top: 1rem;
				padding-bottom: 1rem;
				&.halfRowHeader{
					@extend %horizontalCenter;
					align-items: flex-start;
					flex-wrap: wrap;
					max-width: none;
					@media screen and (max-width:1025px){
						flex-direction: column;
					}
					>div{
						flex-basis: 50%;
						max-width: $contentLimit;
						@media screen and (max-width:1025px){
							flex-basis: auto;
						}
					}
				}
			}
		}
		&.fullContainer{
			&[data-step='9']{
				//1200px*6
				height: 7200px;
				@media screen and (max-width:1025px){
					//800px*6
					height: 4800px;
				}
			}
			&[data-step='10'],
			&[data-step='11']{
				//1200px*2
				height: 2400px;
				@media screen and (max-width:1025px){
					//800px*2
					height: 1600px;
				}
			}
			.imgBox{
				height: 100vh;
				&.fixed{
					width: 100%;
				}
			}
			.cardBox{
				&.blockFixed{
					position: fixed;
					height: 100vh;
					z-index: 2;
				}
			}
		}
		&.fullchartContainer{
			@extend %contentPadding;
			height: 62.5rem;
			@media screen and (max-width:1025px){
				height: 150%;
			}
			&#chapter5{
				height: 600%;
				@media screen and (max-width:1025px){
					height: 250%;
				}
			}
			.imgBox{
				margin-bottom: 1rem;
			}
			h6{
				flex-basis: 50rem;
			}
			p{
				display: block;
			}	
		}
	}
}

.mapLabelBox{
	position: absolute;
	@media screen and (max-width:1025px){
		display: none;
	}
	>div{
		width: 15rem;
		height: auto;
		border: 2px solid $grayColor;
		background-color: $whiteColor;
		border-radius: 0.5rem;
		margin: 1rem 0;
		padding: 0.5rem;
		h6{
			font-size: 1rem;
			font-weight: 500;
		}
		p{
			font-size: 70%;
		}
		h6, p{
			margin-bottom: 0 !important;
			text-align: center !important;
		}
	}
	.legendBox{
		width: 11rem;
		display: inline-flex;
		align-items: center;
		justify-content: space-between;
		span{
			margin: 0 .5rem;
		}
	}
}

.toggleBtn{
	display: inline-flex;
	align-items: center;
	&::before{
		content: attr(data-attr);
		margin-right: .5rem;
		font-size: 0.9rem;
	}
	button{
		height: 2rem;
		border: 1px solid lighten($textSubColor, 15);
		margin: 0;
		padding: 0 .5rem;
		min-width: 3rem;
		&:first-child{
			border-radius: 2rem 0 0 2rem;
			border-right-width: 0px;
		}
		&:last-child{
			border-radius: 0 2rem 2rem 0;
		}
		&.active{
			border-color: darken($blueColor, 30);
			color: darken($blueColor, 30);
			background-color:rgba($blueColor, 0.2);
		}
	}
}
// main_scrollama - end

.toggleLayerBtn{
	margin-left: .25rem;
	border-radius: 1rem;
	border: 2px solid darken($whiteColor, 10);
	background-color: darken($whiteColor, 2.5);
	&:hover{
		background-color: darken($whiteColor, 5);
	}
}

.path-stroke-transparent{
    path{
        stroke: transparent;
    }
}

.annotationbox{
	position: relative;
	.annotationDropdown{
		padding: 0 !important;
	}
}